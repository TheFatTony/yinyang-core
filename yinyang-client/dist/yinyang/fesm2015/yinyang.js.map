{"version":3,"file":"yinyang.js.map","sources":["ng://yinyang/lib/yinyang.service.ts","ng://yinyang/lib/yinyang.component.ts","ng://yinyang/lib/yinyang.module.ts","ng://yinyang/lib/_guards/auth.guard.ts","ng://yinyang/lib/_guards/admin.guard.ts","ng://yinyang/lib/_helpers/error.interceptor.ts","ng://yinyang/lib/_helpers/jwt.interceptor.ts","ng://yinyang/lib/_transfer/user.ts","ng://yinyang/lib/_transfer/file.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class YinyangService {\n\n  constructor() { }\n\n  test() {\n    console.info('YinYang core avalible');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'yy-yinyang',\n  template: `\n    <p>\n      yinyang works!\n    </p>\n  `,\n  styles: []\n})\nexport class YinyangComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { YinyangComponent } from './yinyang.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [YinyangComponent],\n  exports: [YinyangComponent]\n})\nexport class YinyangModule { }\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n      return true;\n    }\n\n    this.router.navigate(['/auth/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {User} from '../_transfer';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const usr: User = JSON.parse(localStorage.getItem('user'));\n    if (usr) {\n      if (usr.roles.find(x => x === 'ROLE_ADMIN'))\n        return true;\n    }\n\n    this.router.navigate(['/auth/login'], {queryParams: {returnUrl: state.url}});\n    return false;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      // if (err.status === 401) {\n      //     this.loginService.logout();\n      //     location.reload(true);\n      // }\n\n      const error = err.error.message || err.statusText;\n      return throwError(error);\n    }));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.info('JwtInterceptor');\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser && currentUser.token) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n","export class User {\n  name: string;\n  password: string;\n  roles: string[];\n}\n","export class File {\n  id: number;\n  fileName: string;\n  mimeType: string;\n  fileSize: number;\n  url: string;\n  alt: string;\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;IAOE,iBAAiB;;;;IAEjB,IAAI;QACF,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;KACvC;;;YATF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;ACJD;IAaE,iBAAiB;;;;IAEjB,QAAQ;KACP;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;GAIT;gBACD,MAAM,EAAE,EAAE;aACX;;;;;;;;;ACVD;;;YAGC,QAAQ,SAAC;gBACR,OAAO,EAAE,EACR;gBACD,YAAY,EAAE,CAAC,gBAAgB,CAAC;gBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;aAC5B;;;;;;;ACRD;;;;IAME,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;KACjC;;;;;;IAED,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;QAC7E,OAAO,KAAK,CAAC;KACd;;;YAbF,UAAU;;;;YAFkC,MAAM;;;;;;;ACDnD;;;;IAOE,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;KACjC;;;;;;IAED,WAAW,CAAC,KAA6B,EAAE,KAA0B;;QACnE,MAAM,GAAG,GAAS,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3D,IAAI,GAAG,EAAE;YACP,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,CAAC;gBACzC,OAAO,IAAI,CAAC;SACf;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;QAC7E,OAAO,KAAK,CAAC;KACd;;;YAfF,UAAU;;;;YAHkC,MAAM;;;;;;;ACDnD;IAOE;KACC;;;;;;IAED,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG;;YAM7C,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC;SAC1B,CAAC,CAAC,CAAC;KACL;;;YAfF,UAAU;;;;;;;;;ACLX;;;;;;IAME,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;QAC/B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,IAAI,WAAW,IAAI,WAAW,CAAC,KAAK,EAAE;YACpC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,WAAW,CAAC,KAAK,EAAE;iBAC7C;aACF,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAC7B;;;YAdF,UAAU;;;;;;;ACJX;CAIC;;;;;;ACJD;CAOC;;;;;;;;;;;;;;;;;;;"}
